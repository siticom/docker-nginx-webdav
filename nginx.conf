user  nginx;
worker_processes  1;

error_log  /dev/stdout warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log         /dev/stdout main;
    sendfile           on;
    keepalive_timeout  65;

    dav_ext_lock_zone zone=default:10m;

    server {
        listen 80;
        server_name webdav-server;

        client_max_body_size 1000M;

        location / {
            create_full_put_path on;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            charset utf-8;

            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;
            dav_access user:rw group:rw all:rw;
            dav_ext_lock zone=default;

            auth_basic "Restricted";
            auth_basic_user_file /htpasswd;

            root /webdav;

            # enable creating directories without trailing slash
            set $x $uri$request_method;
            if ($x ~ [^/]MKCOL$) {
                rewrite ^(.*)$ $1/ break;
            }

            # add tailing slash to directories if not exists
            if (-d $request_filename) { 
                rewrite ^(.*[^/])$ $1/;
            }

            # fix destination header for COPY and MOVE
            set $slash "";
            set $y $http_destination$request_method;
            if ($x ~ [/]((MOVE)|(COPY))$) {
                set $slash "/";
            }
            if ($y ~ ^.*://[a-z0-9.:]*/(.*?)/?((MOVE)|(COPY))$) {
                more_set_input_headers "Destination: http://$server_name/$1$slash";
            }
        }
    }
}